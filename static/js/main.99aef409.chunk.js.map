{"version":3,"sources":["components/Header.js","components/Intro.js","components/Education.js","components/Job.js","components/NewJobForm.js","components/Experience.js","components/PersonalInfo.js","components/CVBuilder.js","components/SaveButton.js","components/EditButton.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","isEditing","useState","name","setName","mobile","setMobile","email","setEmail","address","setAddress","className","htmlFor","id","value","onChange","e","target","Intro","intro","setIntro","rows","cols","Education","uni","setUni","subject","setSubject","grade","setGrade","startDate","setStartDate","endDate","setEndDate","Job","job","handleDeleteClick","title","company","description","responsibilities","map","responsibility","idx","onClick","NewJobForm","jobs","setJobs","newTitle","setNewTitle","newCompany","setNewCompany","newCompanyDescription","setNewCompanyDescription","newJobResponsibility1","setNewJobResponsibility1","newJobResponsibility2","setNewJobResponsibility2","newJobResponsibility3","setNewJobResponsibility3","newStartDate","setNewStartDate","newEndDate","setNewEndDate","onSubmit","preventDefault","uuidv4","required","placeholder","Experience","firstJob","filter","PersonalInfo","personalInfo","setPersonalInfo","CVBuilder","SaveButton","EditButton","App","setIsEditing","toggleIsEditing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iaAoEeA,EAhEA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACRC,mBAAS,QADD,mBACzBC,EADyB,KACnBC,EADmB,OAEJF,mBAAS,UAFL,mBAEzBG,EAFyB,KAEjBC,EAFiB,OAGNJ,mBAAS,SAHH,mBAGzBK,EAHyB,KAGlBC,EAHkB,OAIFN,mBAAS,WAJP,mBAIzBO,EAJyB,KAIhBC,EAJgB,KAmBhC,OACE,wBAAQC,UAAU,SAAlB,SACGV,EACC,uBAAMU,UAAU,cAAhB,UACE,uBAAOC,QAAQ,YAAf,kBACA,uBACEC,GAAG,YACHC,MAAOX,EACPY,SArBe,SAACC,GACxBZ,EAAQY,EAAEC,OAAOH,QAqBTH,UAAU,iBAEZ,uBAAOC,QAAQ,cAAf,oBACA,uBACEC,GAAG,cACHC,MAAOT,EACPU,SAzBiB,SAACC,GAC1BV,EAAUU,EAAEC,OAAOH,QAyBXH,UAAU,iBAEZ,uBAAOC,QAAQ,aAAf,mBACA,uBACEC,GAAG,aACHC,MAAOP,EACPQ,SA7BgB,SAACC,GACzBR,EAASQ,EAAEC,OAAOH,QA6BVH,UAAU,iBAEZ,uBAAOC,QAAQ,eAAf,qBACA,uBACEC,GAAG,eACHC,MAAOL,EACPM,SAjCkB,SAACC,GAC3BN,EAAWM,EAAEC,OAAOH,QAiCZH,UAAU,oBAId,qCACE,oBAAIA,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,cAAd,SAA6BN,IAC7B,oBAAIM,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,cAAd,SAA6BF,UC3BxBS,G,MA9BD,SAAC,GAAmB,IAAjBjB,EAAgB,EAAhBA,UAAgB,EACLC,mBACxB,oHAF6B,mBACxBiB,EADwB,KACjBC,EADiB,KAS/B,OACE,yBAAST,UAAU,QAAnB,SACGV,EACC,uBAAMU,UAAU,aAAhB,UACE,uBAAOC,QAAQ,aAAf,mBACA,0BACEC,GAAG,aACHC,MAAOK,EACPR,UAAU,cACVU,KAAK,IACLC,KAAK,KACLP,SAfgB,SAACC,GACzBI,EAASJ,EAAEC,OAAOH,aAkBd,mBAAGH,UAAU,aAAb,SAA2BQ,QCiEpBI,G,MAzFG,SAAC,GAAmB,IAAjBtB,EAAgB,EAAhBA,UAAgB,EACbC,mBAAS,cADI,mBAC5BsB,EAD4B,KACvBC,EADuB,OAELvB,mBAAS,WAFJ,mBAE5BwB,EAF4B,KAEnBC,EAFmB,OAGTzB,mBAAS,SAHA,mBAG5B0B,EAH4B,KAGrBC,EAHqB,OAID3B,mBAAS,QAJR,mBAI5B4B,EAJ4B,KAIjBC,EAJiB,OAKL7B,mBAAS,QALJ,mBAK5B8B,EAL4B,KAKnBC,EALmB,KAuBnC,OACE,0BAAStB,UAAU,YAAnB,UACE,oBAAIA,UAAU,kBAAd,uBACCV,EACC,uBAAMU,UAAU,iBAAhB,UACE,0BAASA,UAAU,4BAAnB,UACE,uBAAOC,QAAQ,WAAf,wBACA,uBACEC,GAAG,WACHC,MAAOU,EACPb,UAAU,kBACVI,SA3BY,SAACC,GACvBS,EAAOT,EAAEC,OAAOH,UA4BR,uBAAOF,QAAQ,eAAf,qBACA,uBACEC,GAAG,eACHC,MAAOY,EACPf,UAAU,kBACVI,SA/BgB,SAACC,GAC3BW,EAAWX,EAAEC,OAAOH,UAgCZ,uBAAOF,QAAQ,aAAf,mBACA,uBACEC,GAAG,aACHC,MAAOc,EACPjB,UAAU,kBACVI,SAnCc,SAACC,GACzBa,EAASb,EAAEC,OAAOH,aAqCZ,0BAASH,UAAU,yBAAnB,UACE,uBAAOC,QAAQ,iBAAf,wBACA,uBACEC,GAAG,iBACHC,MAAOgB,EACPnB,UAAU,kBACVI,SAzCkB,SAACC,GAC7Be,EAAaf,EAAEC,OAAOH,UA0Cd,uBAAOF,QAAQ,eAAf,sBACA,uBACEC,GAAG,eACHC,MAAOkB,EACPrB,UAAU,kBACVI,SA7CgB,SAACC,GAC3BiB,EAAWjB,EAAEC,OAAOH,gBAiDhB,mCACE,0BAASH,UAAU,sBAAnB,UACE,0BAASA,UAAU,4BAAnB,UACE,oBAAIA,UAAU,gBAAd,SAA+Ba,IAC/B,qBAAIb,UAAU,oBAAd,UACGe,EADH,MACeE,QAGjB,yBAASjB,UAAU,yBAAnB,SACE,oBAAGA,UAAU,kBAAb,UACGmB,EADH,MACiBE,iB,QCpDhBE,G,MA7BH,SAAC,GAA2C,IAAzCjC,EAAwC,EAAxCA,UAAWkC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,kBAC7B,OACE,0BAASzB,UAAU,MAAnB,UACE,oCACE,oBAAIA,UAAU,YAAd,SAA2BwB,EAAIE,QAC/B,oBAAI1B,UAAU,cAAd,SAA6BwB,EAAIG,UACjC,mBAAG3B,UAAU,kBAAb,SAAgCwB,EAAII,cACpC,oBAAI5B,UAAU,WAAd,SACGwB,EAAIK,iBAAiBC,KAAI,SAACC,EAAgBC,GAAjB,OACxB,oBAAIhC,UAAU,gBAAd,SACG+B,GADgCC,WAMzC,0BAAShC,UAAU,gBAAnB,UACE,oBAAGA,UAAU,YAAb,UACGwB,EAAIL,UADP,MACqBK,EAAIH,WAExB/B,EACC,wBAAQU,UAAU,aAAaiC,QAASR,EAAxC,SACE,mBAAGzB,UAAU,kBAEb,a,OC8HGkC,G,MAlJI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACR7C,mBAAS,aADD,mBACjC8C,EADiC,KACvBC,EADuB,OAEJ/C,mBAAS,WAFL,mBAEjCgD,EAFiC,KAErBC,EAFqB,OAGkBjD,mBACxD,6BAJsC,mBAGjCkD,EAHiC,KAGVC,EAHU,OAMkBnD,mBACxD,wBAPsC,mBAMjCoD,EANiC,KAMVC,EANU,OASkBrD,mBACxD,yBAVsC,mBASjCsD,EATiC,KASVC,EATU,OAYkBvD,mBACxD,wBAbsC,mBAYjCwD,EAZiC,KAYVC,EAZU,OAeAzD,mBAAS,QAfT,mBAejC0D,EAfiC,KAenBC,EAfmB,OAgBJ3D,mBAAS,QAhBL,mBAgBjC4D,EAhBiC,KAgBrBC,EAhBqB,KAuExC,OACE,uBAAMpD,UAAU,aAAaqD,SA7BV,SAAChD,GACpBA,EAAEiD,iBACFlB,EAAQ,GAAD,mBACFD,GADE,CAEL,CACET,MAAOW,EACPV,QAASY,EACTX,YAAaa,EACbZ,iBAAkB,CAChBc,EACAE,EACAE,GAEF5B,UAAW8B,EACX5B,QAAS8B,EACTjD,GAAIqD,kBAGRjB,EAAY,aACZE,EAAc,WACdE,EAAyB,4BACzBE,EAAyB,wBACzBE,EAAyB,yBACzBE,EAAyB,wBACzBE,EAAgB,QAChBE,EAAc,SAId,UACE,0BAASpD,UAAU,uBAAnB,UACE,uBAAOC,QAAQ,kBAAf,uBACA,uBACEC,GAAG,kBACHF,UAAU,mBACVwD,UAAQ,EACRrD,MAAOkC,EACPjC,SA9DqB,SAACC,GAC5BiC,EAAYjC,EAAEC,OAAOH,UA+DjB,uBAAOF,QAAQ,oBAAf,qBACA,uBACEC,GAAG,oBACHF,UAAU,mBACVwD,UAAQ,EACRrD,MAAOoC,EACPnC,SAnEuB,SAACC,GAC9BmC,EAAcnC,EAAEC,OAAOH,UAoEnB,uBAAOF,QAAQ,wBAAf,iCACA,uBACEC,GAAG,wBACHF,UAAU,mBACVwD,UAAQ,EACRrD,MAAOsC,EACPrC,SAxEkC,SAACC,GACzCqC,EAAyBrC,EAAEC,OAAOH,UAyE9B,uBAAOF,QAAQ,2BAAf,kCACA,uBACEC,GAAG,4BACHF,UAAU,mBACVwD,UAAQ,EACRrD,MAAOwC,EACPvC,SA7EkC,SAACC,GACzCuC,EAAyBvC,EAAEC,OAAOH,UA8E9B,uBACED,GAAG,4BACHF,UAAU,mBACVwD,UAAQ,EACRrD,MAAO0C,EACPzC,SAjFkC,SAACC,GACzCyC,EAAyBzC,EAAEC,OAAOH,UAkF9B,uBACED,GAAG,4BACHF,UAAU,mBACVwD,UAAQ,EACRrD,MAAO4C,EACP3C,SArFkC,SAACC,GACzC2C,EAAyB3C,EAAEC,OAAOH,aAuFhC,0BAASH,UAAU,uBAAnB,UACE,uBAAOC,QAAQ,sBAAf,wBACA,uBACEC,GAAG,sBACHF,UAAU,mBACVwD,UAAQ,EACRC,YAAY,OACZtD,MAAO8C,EACP7C,SA7FyB,SAACC,GAChC6C,EAAgB7C,EAAEC,OAAOH,UA8FrB,uBAAOF,QAAQ,oBAAf,sBACA,uBACEC,GAAG,oBACHF,UAAU,mBACVwD,UAAQ,EACRC,YAAY,OACZtD,MAAOgD,EACP/C,SAnGuB,SAACC,GAC9B+C,EAAc/C,EAAEC,OAAOH,UAoGnB,wBAAQH,UAAU,oBAAlB,6BCpGO0D,G,MArCI,SAAC,GAAmB,IAAjBpE,EAAgB,EAAhBA,UACdqE,EAAW,CACfjC,MAAO,YACPC,QAAS,UACTC,YAAa,4BACbC,iBAAkB,CAChB,uBACA,wBACA,wBAEFV,UAAW,OACXE,QAAS,OACTnB,GAAIqD,eAZ8B,EAeZhE,mBAAS,CAACoE,IAfE,mBAe7BxB,EAf6B,KAevBC,EAfuB,KAqBpC,OACE,0BAASpC,UAAU,aAAnB,UACE,oBAAIA,UAAU,mBAAd,wBACCmC,EAAKL,KAAI,SAACN,GAAD,OACR,cAAC,EAAD,CACEA,IAAKA,EAELlC,UAAWA,EACXmC,kBAAmB,kBAZRvB,EAYwBsB,EAAItB,QAX7CkC,EAAQD,EAAKyB,QAAO,SAACpC,GAAD,OAASA,EAAItB,KAAOA,MADxB,IAACA,IAUNsB,EAAItB,OAKZZ,EAAY,cAAC,EAAD,CAAY6C,KAAMA,EAAMC,QAASA,IAAc,UCNnDyB,G,MA9BM,SAAC,GAAmB,IAAjBvE,EAAgB,EAAhBA,UAAgB,EACEC,mBACtC,uHAFoC,mBAC/BuE,EAD+B,KACjBC,EADiB,KAStC,OACE,yBAAS/D,UAAU,eAAnB,SACGV,EACC,uBAAMU,UAAU,oBAAhB,UACE,uBAAOC,QAAQ,oBAAf,2BACA,0BACEC,GAAG,oBACHC,MAAO2D,EACP9D,UAAU,qBACVU,KAAK,IACLC,KAAK,KACLP,SAfuB,SAACC,GAChC0D,EAAgB1D,EAAEC,OAAOH,aAkBrB,mBAAGH,UAAU,oBAAb,SAAkC8D,Q,MCR3BE,MAZf,YAAmC,IAAd1E,EAAa,EAAbA,UACnB,OACE,uBAAMU,UAAU,YAAhB,UACE,cAAC,EAAD,CAAQV,UAAWA,IACnB,cAAC,EAAD,CAAOA,UAAWA,IAClB,cAAC,EAAD,CAAWA,UAAWA,IACtB,cAAC,EAAD,CAAYA,UAAWA,IACvB,cAAC,EAAD,CAAcA,UAAWA,QCHhB2E,G,MARI,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QACpB,OACE,wBAAQA,QAASA,EAASjC,UAAU,aAApC,oBCMWkE,G,MARI,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QACpB,OACE,wBAAQA,QAASA,EAASjC,UAAU,aAApC,oBCmBWmE,EAlBH,WAAO,IAAD,EACkB5E,oBAAS,GAD3B,mBACTD,EADS,KACE8E,EADF,KAEVC,EAAkB,WAEtBD,GAAc9E,IAEhB,OACE,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CAAWV,UAAWA,IACrBA,EACC,cAAC,EAAD,CAAY2C,QAASoC,IAErB,cAAC,EAAD,CAAYpC,QAASoC,QCPdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99aef409.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport '../styles/Header.css';\n\nconst Header = ({ isEditing }) => {\n  const [name, setName] = useState('Name');\n  const [mobile, setMobile] = useState('Mobile');\n  const [email, setEmail] = useState('Email');\n  const [address, setAddress] = useState('Address');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleMobileChange = (e) => {\n    setMobile(e.target.value);\n  };\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handleAddressChange = (e) => {\n    setAddress(e.target.value);\n  };\n\n  return (\n    <header className='Header'>\n      {isEditing ? (\n        <form className='Header-form'>\n          <label htmlFor='nameInput'>Name</label>\n          <input\n            id='nameInput'\n            value={name}\n            onChange={handleNameChange}\n            className='Header-input'\n          />\n          <label htmlFor='mobileInput'>Mobile</label>\n          <input\n            id='mobileInput'\n            value={mobile}\n            onChange={handleMobileChange}\n            className='Header-input'\n          />\n          <label htmlFor='emailInput'>Email</label>\n          <input\n            id='emailInput'\n            value={email}\n            onChange={handleEmailChange}\n            className='Header-input'\n          />\n          <label htmlFor='addressInput'>Address</label>\n          <input\n            id='addressInput'\n            value={address}\n            onChange={handleAddressChange}\n            className='Header-input'\n          />\n        </form>\n      ) : (\n        <>\n          <h1 className='Header-name'>{name}</h1>\n          <h2 className='Header-info'>{mobile}</h2>\n          <h2 className='Header-info'>{email}</h2>\n          <h2 className='Header-info'>{address}</h2>\n        </>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\n\nimport '../styles/Intro.css';\n\nconst Intro = ({ isEditing }) => {\n  const [intro, setIntro] = useState(\n    'Intro - write some brief, general information about yourself, highlighting your skills and why you fit the role.'\n  );\n\n  const handleIntroChange = (e) => {\n    setIntro(e.target.value);\n  };\n\n  return (\n    <section className='Intro'>\n      {isEditing ? (\n        <form className='Intro-form'>\n          <label htmlFor='introInput'>Intro</label>\n          <textarea\n            id='introInput'\n            value={intro}\n            className='Intro-input'\n            rows='8'\n            cols='45'\n            onChange={handleIntroChange}\n          ></textarea>\n        </form>\n      ) : (\n        <p className='Intro-para'>{intro}</p>\n      )}\n    </section>\n  );\n};\n\nexport default Intro;\n","import React, { useState } from 'react';\n\nimport '../styles/Education.css';\n\nconst Education = ({ isEditing }) => {\n  const [uni, setUni] = useState('University');\n  const [subject, setSubject] = useState('Subject');\n  const [grade, setGrade] = useState('Grade');\n  const [startDate, setStartDate] = useState('2000');\n  const [endDate, setEndDate] = useState('2020');\n\n  const handleUniChange = (e) => {\n    setUni(e.target.value);\n  };\n  const handleSubjectChange = (e) => {\n    setSubject(e.target.value);\n  };\n  const handleGradeChange = (e) => {\n    setGrade(e.target.value);\n  };\n  const handleStartDateChange = (e) => {\n    setStartDate(e.target.value);\n  };\n  const handleEndDateChange = (e) => {\n    setEndDate(e.target.value);\n  };\n\n  return (\n    <section className='Education'>\n      <h3 className='Education-title'>Education</h3>\n      {isEditing ? (\n        <form className='Education-form'>\n          <section className='Education-subject-details'>\n            <label htmlFor='uniInput'>University</label>\n            <input\n              id='uniInput'\n              value={uni}\n              className='Education-input'\n              onChange={handleUniChange}\n            />\n            <label htmlFor='subjectInput'>Subject</label>\n            <input\n              id='subjectInput'\n              value={subject}\n              className='Education-input'\n              onChange={handleSubjectChange}\n            />\n            <label htmlFor='gradeInput'>Grade</label>\n            <input\n              id='gradeInput'\n              value={grade}\n              className='Education-input'\n              onChange={handleGradeChange}\n            />\n          </section>\n          <section className='Education-date-details'>\n            <label htmlFor='startDateInput'>Start date</label>\n            <input\n              id='startDateInput'\n              value={startDate}\n              className='Education-input'\n              onChange={handleStartDateChange}\n            />\n            <label htmlFor='endDateInput'>End date</label>\n            <input\n              id='endDateInput'\n              value={endDate}\n              className='Education-input'\n              onChange={handleEndDateChange}\n            />\n          </section>\n        </form>\n      ) : (\n        <>\n          <section className='Education-container'>\n            <section className='Education-subject-details'>\n              <h4 className='Education-uni'>{uni}</h4>\n              <h5 className='Education-subject'>\n                {subject} - {grade}\n              </h5>\n            </section>\n            <section className='Education-date-details'>\n              <p className='Education-dates'>\n                {startDate} - {endDate}\n              </p>\n            </section>\n          </section>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Education;\n","import '../styles/Job.css';\n\nconst Job = ({ isEditing, job, handleDeleteClick }) => {\n  return (\n    <section className='Job'>\n      <section>\n        <h4 className='Job-title'>{job.title}</h4>\n        <h5 className='Job-company'>{job.company}</h5>\n        <p className='Job-description'>{job.description}</p>\n        <ul className='Job-list'>\n          {job.responsibilities.map((responsibility, idx) => (\n            <li className='Job-list-item' key={idx}>\n              {responsibility}\n            </li>\n          ))}\n        </ul>\n      </section>\n      <section className='Job-container'>\n        <p className='Job-dates'>\n          {job.startDate} - {job.endDate}\n        </p>\n        {isEditing ? (\n          <button className='Job-delete' onClick={handleDeleteClick}>\n            <i className='fa fa-trash'></i>\n          </button>\n        ) : null}\n      </section>\n    </section>\n  );\n};\n\nexport default Job;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport '../styles/NewJobForm.css';\n\nconst NewJobForm = ({ jobs, setJobs }) => {\n  const [newTitle, setNewTitle] = useState('Job Title');\n  const [newCompany, setNewCompany] = useState('Company');\n  const [newCompanyDescription, setNewCompanyDescription] = useState(\n    'Brief company description'\n  );\n  const [newJobResponsibility1, setNewJobResponsibility1] = useState(\n    'First responsibility'\n  );\n  const [newJobResponsibility2, setNewJobResponsibility2] = useState(\n    'Second responsibility'\n  );\n  const [newJobResponsibility3, setNewJobResponsibility3] = useState(\n    'Third responsibility'\n  );\n  const [newStartDate, setNewStartDate] = useState('YYYY');\n  const [newEndDate, setNewEndDate] = useState('YYYY');\n\n  const handleNewTitleChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n  const handleNewCompanyChange = (e) => {\n    setNewCompany(e.target.value);\n  };\n  const handleNewCompanyDescriptionChange = (e) => {\n    setNewCompanyDescription(e.target.value);\n  };\n  const handleNewJobResponsibility1Change = (e) => {\n    setNewJobResponsibility1(e.target.value);\n  };\n  const handleNewJobResponsibility2Change = (e) => {\n    setNewJobResponsibility2(e.target.value);\n  };\n  const handleNewJobResponsibility3Change = (e) => {\n    setNewJobResponsibility3(e.target.value);\n  };\n  const handleNewStartDateChange = (e) => {\n    setNewStartDate(e.target.value);\n  };\n  const handleNewEndDateChange = (e) => {\n    setNewEndDate(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setJobs([\n      ...jobs,\n      {\n        title: newTitle,\n        company: newCompany,\n        description: newCompanyDescription,\n        responsibilities: [\n          newJobResponsibility1,\n          newJobResponsibility2,\n          newJobResponsibility3,\n        ],\n        startDate: newStartDate,\n        endDate: newEndDate,\n        id: uuidv4(),\n      },\n    ]);\n    setNewTitle('Job Title');\n    setNewCompany('Company');\n    setNewCompanyDescription('Brief company descriptio');\n    setNewJobResponsibility1('First responsibility');\n    setNewJobResponsibility2('Second responsibility');\n    setNewJobResponsibility3('Third responsibility');\n    setNewStartDate('YYYY');\n    setNewEndDate('YYYY');\n  };\n\n  return (\n    <form className='NewJobForm' onSubmit={handleSubmit}>\n      <section className='NewJobForm-container'>\n        <label htmlFor='NewJobFormTitle'>Job Title</label>\n        <input\n          id='NewJobFormTitle'\n          className='NewJobForm-input'\n          required\n          value={newTitle}\n          onChange={handleNewTitleChange}\n        />\n        <label htmlFor='NewJobFormCompany'>Company</label>\n        <input\n          id='NewJobFormCompany'\n          className='NewJobForm-input'\n          required\n          value={newCompany}\n          onChange={handleNewCompanyChange}\n        />\n        <label htmlFor='NewJobFormDescription'>Company Description</label>\n        <input\n          id='NewJobFormDescription'\n          className='NewJobForm-input'\n          required\n          value={newCompanyDescription}\n          onChange={handleNewCompanyDescriptionChange}\n        />\n        <label htmlFor='NewJobFormResposibility1'>Job Responsibilities</label>\n        <input\n          id='NewJobFormResponsibility1'\n          className='NewJobForm-input'\n          required\n          value={newJobResponsibility1}\n          onChange={handleNewJobResponsibility1Change}\n        />\n        <input\n          id='NewJobFormResponsibility2'\n          className='NewJobForm-input'\n          required\n          value={newJobResponsibility2}\n          onChange={handleNewJobResponsibility2Change}\n        />\n        <input\n          id='NewJobFormResponsibility3'\n          className='NewJobForm-input'\n          required\n          value={newJobResponsibility3}\n          onChange={handleNewJobResponsibility3Change}\n        />\n      </section>\n      <section className='NewJobForm-container'>\n        <label htmlFor='NewJobFormStartDate'>Start date</label>\n        <input\n          id='NewJobFormStartDate'\n          className='NewJobForm-input'\n          required\n          placeholder='YYYY'\n          value={newStartDate}\n          onChange={handleNewStartDateChange}\n        />\n        <label htmlFor='NewJobFormEndDate'>End date</label>\n        <input\n          id='NewJobFormEndDate'\n          className='NewJobForm-input'\n          required\n          placeholder='YYYY'\n          value={newEndDate}\n          onChange={handleNewEndDateChange}\n        />\n        <button className='NewJobForm-submit'>Add Job</button>\n      </section>\n    </form>\n  );\n};\n\nexport default NewJobForm;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Job from './Job.js';\nimport NewJobForm from './NewJobForm';\n\nimport '../styles/Experience.css';\n\nconst Experience = ({ isEditing }) => {\n  const firstJob = {\n    title: 'Job Title',\n    company: 'Company',\n    description: 'Brief company description',\n    responsibilities: [\n      'First responsibility',\n      'Second responsibility',\n      'Third responsibility',\n    ],\n    startDate: '2015',\n    endDate: '2020',\n    id: uuidv4(),\n  };\n\n  const [jobs, setJobs] = useState([firstJob]);\n\n  const deleteJob = (id) => {\n    setJobs(jobs.filter((job) => job.id !== id));\n  };\n\n  return (\n    <section className='Experience'>\n      <h3 className='Experience-title'>Experience</h3>\n      {jobs.map((job) => (\n        <Job\n          job={job}\n          key={job.id}\n          isEditing={isEditing}\n          handleDeleteClick={() => deleteJob(job.id)}\n        />\n      ))}\n      {isEditing ? <NewJobForm jobs={jobs} setJobs={setJobs} /> : null}\n    </section>\n  );\n};\n\nexport default Experience;\n","import React, { useState } from 'react';\n\nimport '../styles/PersonalInfo.css';\n\nconst PersonalInfo = ({ isEditing }) => {\n  const [personalInfo, setPersonalInfo] = useState(\n    \"Personal Info - use this section to add anything else you'd like the reader to know, such as hobbies and interests.\"\n  );\n\n  const handlePersonalInfoChange = (e) => {\n    setPersonalInfo(e.target.value);\n  };\n\n  return (\n    <section className='PersonalInfo'>\n      {isEditing ? (\n        <form className='PersonalInfo-form'>\n          <label htmlFor='personalInfoInput'>Personal Info</label>\n          <textarea\n            id='personalInfoInput'\n            value={personalInfo}\n            className='PersonalInfo-input'\n            rows='5'\n            cols='45'\n            onChange={handlePersonalInfoChange}\n          ></textarea>\n        </form>\n      ) : (\n        <p className='PersonalInfo-para'>{personalInfo}</p>\n      )}\n    </section>\n  );\n};\n\nexport default PersonalInfo;\n","import Header from './Header';\nimport Intro from './Intro';\nimport Education from './Education';\nimport Experience from './Experience';\nimport PersonalInfo from './PersonalInfo';\n\nimport '../styles/CVBuilder.css';\n\nfunction CVBuilder({ isEditing }) {\n  return (\n    <main className='CVBuilder'>\n      <Header isEditing={isEditing} />\n      <Intro isEditing={isEditing} />\n      <Education isEditing={isEditing} />\n      <Experience isEditing={isEditing} />\n      <PersonalInfo isEditing={isEditing} />\n    </main>\n  );\n}\n\nexport default CVBuilder;\n","import React from 'react';\n\nimport '../styles/SaveButton.css';\n\nconst SaveButton = ({ onClick }) => {\n  return (\n    <button onClick={onClick} className='SaveButton'>\n      Save\n    </button>\n  );\n};\n\nexport default SaveButton;\n","import React from 'react';\n\nimport '../styles/EditButton.css';\n\nconst EditButton = ({ onClick }) => {\n  return (\n    <button onClick={onClick} className='EditButton'>\n      Edit\n    </button>\n  );\n};\n\nexport default EditButton;\n","import React, { useState } from 'react';\nimport '../styles/App.css';\n\nimport CVBuilder from './CVBuilder';\nimport SaveButton from './SaveButton';\nimport EditButton from './EditButton';\n\nconst App = () => {\n  const [isEditing, setIsEditing] = useState(false);\n  const toggleIsEditing = () => {\n    // if isEditing - save, else - start editing\n    setIsEditing(!isEditing);\n  };\n  return (\n    <div className='App'>\n      <CVBuilder isEditing={isEditing} />\n      {isEditing ? (\n        <SaveButton onClick={toggleIsEditing} />\n      ) : (\n        <EditButton onClick={toggleIsEditing} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}